repository(リポジトリ)：変更履歴を記録する場所。
commit：個人リポジトリに変更履歴を記録。
push：共有リポジトリ（サーバ）に変更を共有。

pull：共有リポジトリの情報(サーバ)を同期。

GitHub：Gitリポジトリ(コード)のホスティングサービス。
　　　　ソーシャルコーディングの場でもある。

Githubの特徴
　・プルリクエストによるコラボレーション。
　　変更の履歴を反映登録リクエスト。
　・他チームのソフトウェアが見える。参加も出来る。

Gitリポジトリのホスティングサービス
　・GitHub
　　・公開リポジトリは無料
　　・非公開リポジトリは有料
　・Bitbucket
　　・非公開リポジトリを無料
　　・個人や２・３名なら無料、チーム開発が有料

GitBash
$ git version
git version 2.16.2.windows.1

＊＊初期設定＊＊
N1400501+14005@N1400501 MINGW64 ~
$ git config --global user.name "Yoshiro Kudo"

N1400501+14005@N1400501 MINGW64 ~
$ git config --global user.email Kudou-y@ksc.co.jp

＊＊ローカルリポジトリの新規作成
$ git init
Initialized empty Git repository in C:/Users/14005/.git/

＊＊ローカルリポジトリの新規作成
$ cd desktop/git_first
$ git init
Initialized empty Git repository in C:/Users/14005/Desktop/git_first/.git/

＊＊基本的なワークフロー
1.ファイルの変更をステージングエリアへ追加
　　git add

2.ローカルリポジトリにコミット
    git commit

3.リモートリポジトリにプッシュ
    git pish


$ git add git.txt

N1400501+14005@N1400501 MINGW64 ~/Desktop/git_first (master)
$ git commit
[master (root-commit) 6a184ff] Intial commit
 1 file changed, 51 insertions(+)
 create mode 100644 git.txt

ブラウザで　＋：新しいリポジトリを作成。　YoshiroKudo/intro_git

N1400501+14005@N1400501 MINGW64 ~/Desktop/git_first (master)
$ git remote add origin https://github.com/YoshiroKudo/intro_git.git
  
  ⇒　変更履歴画面が立ち上がるので、viコマンドでコメント追加

$ git push -u origin master
Counting objects: 3, done.
Delta compression using up to 4 threads.
Compressing objects: 100% (2/2), done.
Writing objects: 100% (3/3), 936 bytes | 936.00 KiB/s, done.
Total 3 (delta 0), reused 0 (delta 0)
To https://github.com/YoshiroKudo/intro_git.git
 * [new branch]      master -> master
Branch 'master' set up to track remote branch 'master' from 'origin'.

＊＊変更をコミットする
1.ファイルの変更をステージングエリアへ追加
　複数ファイルを変更したときに、コミットするファイルを選択するためにあるのが
　ステージングエリア。
　　git add [ファイル名]
　　git add .  ⇒全てのファイル

2.ローカルリポジトリにコミット
　変更にメッセージを付けてリポジトリに記録するのがコミット。
　コミットする事で変更がリポジトリ内に時系列で記録される。
    git commit

　コミットメッセージの反映
　１行目：変更内容の要約
　２行目：空白
　３行目：変更した理由

N1400501+14005@N1400501 MINGW64 ~/Desktop/git_first (master)
$ git status
On branch master
Your branch is up to date with 'origin/master'.

nothing to commit, working tree clean
⇒変更されたものはなし

ファイルを更新後、
N1400501+14005@N1400501 MINGW64 ~/Desktop/git_first (master)
$ git status
On branch master
Your branch is up to date with 'origin/master'.

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

        modified:   git.txt　　←赤色

no changes added to commit (use "git add" and/or "git commit -a")

＊＊git addの実行
N1400501+14005@N1400501 MINGW64 ~/Desktop/git_first (master)
$ git add .

N1400501+14005@N1400501 MINGW64 ~/Desktop/git_first (master)
$ git status
On branch master
Your branch is up to date with 'origin/master'.

Changes to be committed:
  (use "git reset HEAD <file>..." to unstage)

        modified:   git.txt　　←緑色になる

$ git commit -v
[master c8d13f1] コメントの追加
 1 file changed, 51 insertions(+), 1 deletion(-)

＊＊確認
$ git log
commit c8d13f14517eb310c83db53057197a6b5c77c3d0 (HEAD -> master)
Author: Yoshiro Kudo <Kudou-y@ksc.co.jp>
Date:   Mon Mar 11 18:03:56 2019 +0900

    コメントの追加

    講座が進行した為

commit 6a184ffd5f13f539ed46bf24ec7384ea075863ce (origin/master)
Author: Yoshiro Kudo <Kudou-y@ksc.co.jp>
Date:   Mon Mar 11 17:03:58 2019 +0900

    Intial commit

新規作成ファイルのコミット
$ git add xxxx.txt
$ git commit -v

削除ファイルのコミット
$ git rm xxxx.txt
$ git commit -v

複数ファイルのコミット
$ git add .
$ git commit -v

現状確認
$ git status
  origin/master  by x commits. ←　x回のコミット分アップされていない

**変更を加えると
Changes not staged for commit:
**addを実行すると
Changes to be committed:

***変更履歴の確認
$git log
　リポジトリにコミットされたログを確認する。
$ git log
★３番目
commit e1faecd3ad272a8dd472e88c6854a0bafd767124 (HEAD -> master)
Author: Yoshiro Kudo <Kudou-y@ksc.co.jp>
Date:   Tue Mar 12 14:57:22 2019 +0900

    git 進行に伴う変更

    講座進捗
★２番目
commit c8d13f14517eb310c83db53057197a6b5c77c3d0　←このハッシュ値で戻せる
Author: Yoshiro Kudo <Kudou-y@ksc.co.jp>
Date:   Mon Mar 11 18:03:56 2019 +0900

    コメントの追加

    講座が進行した為
★１番目
commit 6a184ffd5f13f539ed46bf24ec7384ea075863ce (origin/master)
Author: Yoshiro Kudo <Kudou-y@ksc.co.jp>
Date:   Mon Mar 11 17:03:58 2019 +0900

    Intial commit

＊＊＊オプション
$ git log --oneline  #一行で表示
e1faecd (HEAD -> master) git 進行に伴う変更
c8d13f1 コメントの追加
6a184ff (origin/master) Intial commit

$git log -p ファイル名	#ファイルの差分を表示する

$ git log -n 3 最新変更３行を表示
$ git log --oneline -n 3 最新変更３行を表示

$ git log -p  #コミットログと変更点のパッチ形式を表示

＊＊＊変更差分を確認
$ git diff	#ステージとの差分

$ git diff HEAD	#ステージとコミットの差分


＊＊＊リモートリポジトリにプッシュ
++git remote addコマンドで、ローカルリポジトリをリモートリポジトリに登録！
$ git remote add orign https://github.com/user名/repo.git
                       https://github.com/YoshiroKudo/intro_git
  orignがリモートリポジトリになる！！！
++git pushコマンドで、ローカルリポジトリの内容をリモートリポジトリに送信
$ git push origin master  #masterはディフォルトのブランチ
Counting objects: 6, done.
Delta compression using up to 4 threads.
Compressing objects: 100% (4/4), done.
Writing objects: 100% (6/6), 2.45 KiB | 1.23 MiB/s, done.
Total 6 (delta 1), reused 0 (delta 0)
remote: Resolving deltas: 100% (1/1), done.
To https://github.com/YoshiroKudo/intro_git.git
   6a184ff..e1faecd  master -> master

